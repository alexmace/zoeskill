---
- hosts: all
  become: yes # i.e. become root for running tasks
  gather_facts: false
  pre_tasks:
  - name: Install python2 for Ansible
    raw: bash -c "test -e /usr/bin/python || (apt -qqy update && apt install -qqy python-minimal)"
    register: output
    changed_when: output.stdout != ""
  - name: Gathering Facts
    setup:

  handlers:
    - name: restart apache
      service: name=apache2 state=restarted
    - name: restart php-fpm
      service: name=php7.2-fpm state=restarted
    - name: restart rabbitmq
      service: name=rabbitmq-server state=restarted


#  roles:
#    - apache

  tasks:
    - name: Install Apache
      apt: name=apache2 state=latest

    - name: Start Apache and enable at boot
      service: name=apache2 state=started enabled=yes

    - name: Configure Apache to serve /vagrant/public by default
      template:
          src: provision/000-default.conf
          dest: /etc/apache2/sites-available
          owner: root
          group: root
          mode: 0644
      notify:
          - restart apache

    - name: Install PHP PPA to get PHP 7.2
      apt_repository:
          repo: 'ppa:ondrej/php'
    - name: ensure php-fpm is installed
      apt: name=php7.2-fpm state=latest
    - name: ensure php-fpm is running (and enable it at boot)
      service: name=php7.2-fpm state=started enabled=yes

    - name: Add group for PHP-FPM pool for this app
      group:
          name: zoe-skill
    - name: Add user for PHP-FPM pool for this app
      user:
          name: zoe-skill
          groups: zoe-skill
          shell: /sbin/nologin # Prevents the user from being logged in.
          createhome: no
    - name: Ensure chroot directory PHP-FPM will use exists
      file:
          path: "/vagrant"
          state: directory
    - name: Add PHP-FPM pool configuration for the application
      template:
          src: provision/zoe-skill.conf
          dest: /etc/php/7.2/fpm/pool.d/zoe-skill.conf
          owner: root
          group: root
          mode: 0644
      notify:
          - restart php-fpm
    - name: ensure php-curl is installed
      apt: name=php7.2-curl state=latest
    - name: ensure php-sqlite is installed
      apt: name=php7.2-sqlite3 state=latest
    - name: ensure php-mbstring is installed
      apt: name=php7.2-mbstring state=latest
    - name: ensure php-bcmath is installed
      apt: name=php7.2-bcmath state=latest
    - name: Enable proxy fcgid extension for Apache
      apache2_module:
          name: proxy_fcgi
          state: present
      notify:
        - restart apache
    - name: Enable rewrite module for Apache
      apache2_module:
          name: rewrite
          state: present
      notify:
        - restart apache
    - name: Install rabbitmq
      apt: name=rabbitmq-server state=latest
    - name: Start rabbitmq and enable at boot
      service: name=rabbitmq-server state=started enabled=yes
    - name: Enables the rabbitmq_management plugin
      rabbitmq_plugin:
        names: rabbitmq_management
        state: enabled
      notify:
        - restart rabbitmq
    - name: Add an admin user for RabbitMQ
      rabbitmq_user:
          user: test
          # Change this...
          password: test
          tags: administrator
          permissions:
              - vhost: /
                configure_priv: .*
                read_priv: .*
                write_priv: .*
          state: present

    - name: Ensure logs directory is writable
      file:
          path: "/vagrant/logs"
          mode: 0777
          state: directory
    - name: Ensure log file exists and is writable
      file:
          path: "/vagrant/logs/app.log"
          mode: 0666
          state: touch
